cmake_minimum_required(VERSION 3.16)

# DD4hep relies on LD_LIBRARY_PATH at run time to find .components files
# which themselves refer to symbols and plugins (shared libraries) that
# contain them. It opens these plugins with libdl so they symbols do not
# need to be linked in here at compile time. All of this is to say we
# should not link the ip6 of epic gemetry libraries here.

# Automatically set plugin name the same as the directory name
get_filename_component(PLUGIN_NAME ${CMAKE_CURRENT_LIST_DIR} NAME)
print_header(">>>>   P L U G I N :   ${PLUGIN_NAME}    <<<<")       # Fancy printing

project(dd4hep_project)

# Find dependencies
find_package(JANA REQUIRED)
find_package(ROOT REQUIRED)
find_package(DD4hep REQUIRED)

# DD4hep relies on programmatically finding and linking detector-specific
# routines at run time. (It uses strings found in the XML to determine
# symbol names it should load). Those may eventually be placed in a common
# library that is used by both the simulation and reconstruction. This is
# where we will reference the library containing them.


# Compile all other sources into a library
file(GLOB PLUGIN_SOURCES *.cpp *.cc *.c  *.hpp *.hh *.h)
set(LIBRARY_SOURCES ${PLUGIN_SOURCES})

# Library don't need <plugin_name>.cc but Plugin does
set(PLUGIN_CC_FILE dd4hep.cc)

# Make the path absolute as GLOB files will be absolute paths
get_filename_component(PLUGIN_CC_FILE_ABS "${CMAKE_CURRENT_LIST_DIR}/${PLUGIN_CC_FILE}" ABSOLUTE)

# Remove plugin.cc file from libraries
list(REMOVE_ITEM LIBRARY_SOURCES ${PLUGIN_CC_FILE_ABS})


set( SYS_INCLUDE_DIRS ${JANA_INCLUDE_DIR} ${ROOT_INCLUDE_DIRS} ${DD4hep_INCLUDE_DIRS})
set( LINK_LIBRARIES ${JANA_LIB} ${ROOT_LIBRARIES} ${DD4hep_LIBRARIES})

# Define library
add_library( dd4hep_library STATIC ${LIBRARY_SOURCES} )
target_include_directories( dd4hep_library PUBLIC ${CMAKE_SOURCE_DIR} )
target_include_directories( dd4hep_library SYSTEM PUBLIC ${SYS_INCLUDE_DIRS} )
target_link_libraries(dd4hep_library ${LINK_LIBRARIES})


# Define plugin
add_library(dd4hep_plugin SHARED ${PLUGIN_SOURCES})
target_include_directories(dd4hep_plugin PUBLIC ${CMAKE_SOURCE_DIR} )
target_include_directories(dd4hep_plugin PUBLIC ${SYS_INCLUDE_DIRS})
target_link_libraries(dd4hep_plugin dd4hep_library ${LINK_LIBRARIES})
set_target_properties(dd4hep_plugin PROPERTIES PREFIX "" OUTPUT_NAME "dd4hep" SUFFIX ".so")

# Install plugin
install(TARGETS dd4hep_plugin DESTINATION plugins)

# Install headers for plugin
file(GLOB my_headers "*.h*")
install(FILES ${my_headers} DESTINATION include/services/dd4hep)

# IDK if this is really still needed since we are not linking ip6 and epic anymore?  2022-08-09 DL

## The following ensures that on macosx the @rpath search paths go into the plugin
## itself and includes the plugin installation directory. This is needed so
## the ROOT dictionary libraries generated by PODIO are found.
## (n.b. there is probably a better way to do this since I believe this makes
## the plugin non-relocatable as it includes an absolute search path)
#set_target_properties(dd4hep_plugin PROPERTIES SKIP_BUILD_RPATH FALSE)
#set_target_properties(dd4hep_plugin PROPERTIES BUILD_WITH_INSTALL_RPATH TRUE)
#set_target_properties(dd4hep_plugin PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)
#set_property(
#        TARGET dd4hep_plugin
#        PROPERTY INSTALL_RPATH
#        "${EIC_DD4HEP_HOME}/lib"
#        "${IP6_DD4HEP_HOME}/lib"
#)
