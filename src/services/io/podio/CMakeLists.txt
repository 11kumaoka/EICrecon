cmake_minimum_required(VERSION 3.9)
cmake_policy(SET CMP0074 NEW)  # use the policy to look for <package>_ROOT envar

project(podio_project)

# Find dependencies
find_package(JANA REQUIRED)
find_package(EDM4HEP REQUIRED)
find_package(podio REQUIRED)
set(PODIO_LIBRARIES EDM4HEP::edm4hep EDM4HEP::edm4hepDict podio::podioRootIO)

# This is used to automatically run the make_datamodel_glue.py command
# that generates the datamodel_glue.h file. This is temporary until
# a better mechanism using PODIO tools is developed.
add_custom_command(
        OUTPUT  datamodel_glue.h          # Treated as relative to CMAKE_CURRENT_BINARY_DIR
        COMMAND python ${PROJECT_SOURCE_DIR}/make_datamodel_glue.py
        WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
        DEPENDS ${PROJECT_SOURCE_DIR}/make_datamodel_glue.py
)

# Source files for plugin only (not library)
set(PLUGIN_SOURCES podio.cc)

# Compile all other sources into a library
file(GLOB mysourcefiles *.cpp *.cc *.c  *.hpp *.hh *.h)
set( LIBRARY_SOURCES ${mysourcefiles} datamodel_glue.h )
list(REMOVE_ITEM LIBRARY_SOURCES ${PLUGIN_SOURCES})

set( INCLUDE_DIRS ${CMAKE_SOURCE_DIR} ${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR} ${JANA_INCLUDE_DIR} ${ROOT_INCLUDE_DIRS})
set( LINK_LIBRARIES ${JANA_LIB} ${PODIO_LIBRARIES})

# Define library
add_library( podio_library STATIC ${LIBRARY_SOURCES} )
target_include_directories( podio_library PUBLIC ${INCLUDE_DIRS} )
target_link_libraries(podio_library ${LINK_LIBRARIES})

# Define plugin
add_library(podio_plugin SHARED ${PLUGIN_SOURCES})
target_include_directories(podio_plugin PUBLIC ${INCLUDE_DIRS})
target_link_libraries(podio_plugin BEMC_library ${LINK_LIBRARIES})
set_target_properties(podio_plugin PROPERTIES PREFIX "" OUTPUT_NAME "podio" SUFFIX ".so")

# Install plugin
install(TARGETS podio_plugin DESTINATION plugins)

# Install headers for plugin
file(GLOB my_headers "*.h*")
install(FILES ${my_headers} DESTINATION include/services/io/podio)

# The following ensures that on macosx the @rpath search paths go into the plugin
# itself and includes the plugin installation directory. This is needed so
# the ROOT dictionary libraries generated by PODIO are found.
# (n.b. there is probably a better way to do this since I believe this makes
# the plugin non-relocatable as it includes an absolute search path)
set_target_properties(podio_plugin PROPERTIES SKIP_BUILD_RPATH FALSE)
set_target_properties(podio_plugin PROPERTIES BUILD_WITH_INSTALL_RPATH TRUE)
set_target_properties(podio_plugin PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)
set_target_properties(podio_plugin PROPERTIES INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/plugins)


# Install root dictionaries made by PODIO
#set(my_root_dict_files
#        ${PROJECT_BINARY_DIR}/libEDM4HEPDataModelDict_rdict.pcm
#        ${PROJECT_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}EDM4HEPDataModel${CMAKE_SHARED_LIBRARY_SUFFIX}
#        ${PROJECT_BINARY_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}EDM4HEPDataModelDict${CMAKE_SHARED_LIBRARY_SUFFIX})
#install(FILES ${my_root_dict_files} DESTINATION plugins)

